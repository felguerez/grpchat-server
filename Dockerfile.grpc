# Use the official Golang image to create a build artifact.
FROM golang:1.21-alpine as builder

# Copy local code to the container image.
WORKDIR /app
COPY go.* ./
RUN go mod download
COPY . ./

# Change to the directory containing main.go
WORKDIR /app/cmd/server

# Copy the .env file to the same directory as the executable
COPY .env /app/cmd/server/.env

# Build the command inside the container.
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -v -o server

# Use a minimal image to run the service
FROM golang:1.21-alpine
WORKDIR /app/cmd/server
RUN apk add --no-cache ca-certificates

# Copy the binary to the production image from the builder stage.
COPY --from=builder /app/cmd/server/server /app/cmd/server/server
COPY --from=builder /app/cmd/server/.env /app/cmd/server/.env

# Run the service on container startup.
CMD ["/app/cmd/server/server"]
